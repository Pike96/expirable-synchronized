{
  "name": "expirable-synchronized",
  "version": "1.0.0",
  "description": "a decorator that can safely make any function that returns promise atomic",
  "main": "dist/index.js",
  "scripts": {
    "clean": "rimraf dist/",
    "build": "npm run clean && babel --out-dir=dist/ src/ && jest",
    "dev": "npm run clean && babel --source-maps --out-dir=dist/ src/ && npm link",
    "test": "npm run build"
  },
  "keywords": [
    "chain",
    "decorator",
    "expirable",
    "function",
    "lock",
    "promise",
    "queue",
    "synchronise",
    "synchronised",
    "synchronize",
    "synchronized"
  ],
  "author": "Pike96",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "7.2.3",
    "@babel/core": "7.2.2",
    "@babel/plugin-proposal-class-properties": "7.3.0",
    "@babel/plugin-proposal-decorators": "7.3.0",
    "@babel/plugin-proposal-export-default-from": "7.2.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.2.0",
    "@babel/plugin-proposal-object-rest-spread": "^7.3.0",
    "@babel/plugin-transform-async-to-generator": "7.2.0",
    "@babel/preset-env": "7.3.1",
    "babel-eslint": "^10.0.2",
    "babel-jest": "^24.8.0",
    "babel-plugin-module-resolver": "~3.1.0",
    "eslint": "^6.1.0",
    "eslint-plugin-jest": "^22.14.1",
    "jest": "^24.8.0",
    "prettier": "^1.18.2",
    "rimraf": "^2.6.3"
  }
}
